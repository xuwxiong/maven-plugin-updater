<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
  		<groupId>intact.devtools</groupId> 
  		<artifactId>intact-parent-pom</artifactId> 
  		<version>1.9.2</version> 
  	</parent>

	<groupId>intact.soa.plpolicy.task</groupId>	
	<artifactId>add-party-process</artifactId>
	<packaging>jar</packaging>
	<version>5.13.0.0.D11BUGFIX-SNAPSHOT</version>
	<name>${project.artifactId}</name>
	
	<properties>
		<jdk>1.5</jdk>
		<shortGroupId>soa.plpolicy.task</shortGroupId>
		<project.folder>${project.basedir}</project.folder>
		<scmRepositoryWorkspace>DEV_${user.name}_${shortGroupId}.${project.artifactId}_D11BUGFIX_WS</scmRepositoryWorkspace>
	</properties>

	<scm>
		<connection>scm:jazz:https://prod-rtc-b2e.iad.ca.inet/ccm:5.11.3</connection>
	</scm>

  	<distributionManagement>
  		<site>
  			<id>intact-site</id>
  			<name>intact site repository</name>
  			<url>dav:${project.url}</url>
  		</site>
  		<snapshotRepository>
  			<id>intact-snapshots</id>
  			<name>intact snapshots repository</name>
  			<url>https://prod-nexus-b2eapp.iad.ca.inet:8443/nexus/content/repositories/snapshots-retained</url>
  		</snapshotRepository>
	</distributionManagement>
	
	<!-- Needed ant Jar to compile the project -->
	<dependencies>
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant</artifactId>
			<version>1.7.1</version>
		</dependency>
		<dependency>
			<groupId>intact.soa-resources.plpolicy.task</groupId>
			<artifactId>add-party-process-resources</artifactId>
			<version>5.13.0.0-SNAPSHOT</version>
		</dependency>	
	</dependencies>	
	
	<build>
		<!--  the final bpel JAR name that we will produce -->
		<finalName>${project.name}-${project.version}</finalName>
		
		<!-- load resources : mvn initialize-->
		<!-- the resources that will be used to compile the src: java classes, properties,...-->		
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
				<filtering>false</filtering>
			</resource>
		</resources>
		
		<plugins>
			<!-- Load resources : mvn initialize -->
			<!-- Plugin used to unpack the needed resources (wsdl & xsd) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>initialize</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<!-- Specify the needed wsdl & xsd to copy -->
							<outputDirectory>${project.folder}</outputDirectory>							
							<includes>
								wsdl/**/*.*,
								xsd/**/*.*,
							</includes>
							<excludes>**/*.properties,**/jaxb*/**,**/samples/**,.jazzignore</excludes>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack2</id>
						<phase>initialize</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>target/classes</outputDirectory>
							<includes>							
								com/intact/**/*.*																									
							</includes>
							<excludes>**/*.properties</excludes>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>


			
			<!-- If we do (mvn clean), we need also to clean the folder bpel-compile beside the target folder-->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>bpel-compile</directory>
							<includes>
								<include>**/*.bpr</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>wsdl</directory>
							<includes>
								<include>**</include>
							</includes>
							<excludes>
								<exclude>bpel/**</exclude>
							</excludes>	
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>xsd</directory>
							<includes>
								<include>**</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			
			<!-- Create bpr -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<!-- Create bpr file based on the generated bprd ant script by ActiveVos designer
					The BPR is generated in the bpel-compile folder
					-->
					<execution>
						<id>run-deploy</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<ant antfile="${project.folder}/deploy/${project.name}.bprd" dir="${project.folder}/deploy" inheritAll="true" inheritRefs="true" target="build"/>
							</tasks>
						</configuration>
					</execution>
					<!-- Unzip bpr from bpel-compile folder to target folder -->
					<execution>
						<phase>prepare-package</phase>
						<configuration>
							<tasks>
								<unzip dest="${project.folder}/target/classes" src="${project.folder}/bpel-compile/${project.name}.bpr"/>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.activevos.lib</groupId>
						<artifactId>ae_bpr_tasks</artifactId>
						<version>7.1.3</version>
					</dependency>
					<dependency>
						<groupId>axis</groupId>
						<artifactId>axis</artifactId>
						<version>1.4</version>
					</dependency>
					<dependency>
						<groupId>wsdl4j</groupId>
						<artifactId>wsdl4j</artifactId>
						<version>1.6.1</version>
					</dependency>
					<dependency>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
						<version>1.0</version>
					</dependency>
					<dependency>
						<groupId>commons-discovery</groupId>
						<artifactId>commons-discovery</artifactId>
						<version>0.2</version>
					</dependency>
					<dependency>
						<groupId>commons-net</groupId>
						<artifactId>commons-net</artifactId>
						<version>2.0</version>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-commons-net</artifactId>
						<version>1.7.1</version>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-nodeps</artifactId>
						<version>1.7.1</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.7,)
										</versionRange>
										<goals>
											<goal>
												unpack-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>